<fieldset>
  <legend><b>Parsing Rule</b></legend>
  <%= f.label :rule_type, "Type" %> 
  <div class="rule_type_button"><%= f.radio_button(:rule_type, "Continuous", :class => "required") %> Cont</div>
  <div class="rule_type_button"><%= f.radio_button(:rule_type, "Categorical", :class => "required") %> Cat</div>
  <div class="rule_type_button"><%= f.radio_button(:rule_type, "Binary", :class => "required") %> Bin</div>
  <div class="rule_type_button"><%= f.radio_button(:rule_type, "Text", :class => "required") %> Text</div>
  <%= f.label :remote_featurename, "Remote Feature" %> <%= f.text_field(:remote_featurename, :size => 35, :class => "required") %>
  <%= f.label :local_featurename, "Local Feature" %> <%= f.text_field(:local_featurename, :size => 35, :class => "required") %>
  <%= f.label :regex, "Regular Expression" %> 
  <div style="float: left;">
    <%= select "scraping_rule", "regex", ScrapingRule::REGEXES, {:include_blank=>false}, {:class=>"require regex scraping_rule_regex"} %>
    <input type="text" id="scraping_rule_regex_option" name="scraping_rule_option[regex]" class="require regexp scraping_rule_regex_option" style="display:none;"  value='<%= @scraping_rule.regex %>' />
    <br style="clear: both;" />
    <span style="float: left;">Custom Regex</span>
    <input type="checkbox" class="custom_regex" />
  </div>
  <%= f.label :min, "Min" %> <%= f.text_field(:min, :size => 35, :class => "ifcont") %>
  <%= f.label :max, "Max" %> <%= f.text_field(:max, :size => 35, :class => "ifcont") %>
  <%= f.label :valid_inputs, "Valid Inputs" %> <%= f.text_field(:valid_inputs, :size => 35) %>
  <% if @scraping_rule.rule_type == 'Categorical' %>
  <% end %>

  <% if @scraping_rule.rule_type == 'Categorical' %>
    <%= f.label :bilingual, "Bilingual" %>  
    <%= f.check_box(:bilingual) %>
  <% else %>
    <%= f.label :bilingual, "Bilingual", :style=>"display:none;" %>  
    <%= f.check_box(:bilingual, :style=>"display:none;") %>
  <% end %>

  <%= f.label :french, "French" %>
  <%= f.check_box(:french) %>
  <%= f.submit "Update Rule", :"data-id" => @scraping_rule.id, :class => "scraping_rule_submit", :style => "clear: left; margin-left: 200px" %>
  <p style="float: left; margin-bottom: 0">NB: Regular expressions can be either match or replace. To replace, use () with \1 \2 etc., with a "/" character in between the match and replace expressions. You can supply multiple regular expressions which are applied in order with the '^^' separator. The result will be the first match in the chain of regular expressions. If all fail, nothing is returned</p>
  <p style="float: left; margin-bottom: 0">For the valid inputs field use the '*' as a separator.</p>
</fieldset>